have termcolor printing every step of the way to inform the user
every time we use "with open" use encoding="utf-8"
major variables should be all caps Variables on top of the script and not user input taking unless otherwise specified (including model names)
if there are models in the script like gpt-4o or gpt-4o-mini or o1-mini or o1-preview do not change them as they now exist
for async task use from openai import AsyncOpenAI
always use try except blocks with descriptive prints where necessary. have informative error printing (with the error itself)
lets implement every project with seperations of concerns in mind
for api keys we use system variables not .env file with os.getenv(
create and update requirements.txt withour version numbers
use chat.completions.create and not chatcompletions endpoint when using openai library, chatcompletions is no longer in use

if you are building web related stufff always use dark mode colorful daisy us, tailwind and anime.js where necessary to save to save on code. You can use css too for animations where necessary. for when user is waiting always have a nice waiting animation.
only for fastapi apps: main.py will always be in root folder and run the app with main:app 127 with reload
when working on projects do not remove any fuctionality that is already working


IGNORE:
IMPORTANT: YOU MUST PERFORM AN UPDATE TO .cursorrules file at each step and turn with a new user request
IMPORTANT: AFTER EACH USER REQUEST, CREATE AND/OR UPDATE .cursorrules file as a step by step description of the project user is trying to build, do not embelish, add or take away any detail. just translate user request to a nicely formated instructions.
Your action sequence in each turn should be:
1) create or update .cursorrules file peruser request
2) work on the files/answer user request
3) double check if cursorrules was updated to reflect the changes
IMPORTANT: NEVER FORGET TO UPDATE THE .cursorrules file in each consecutive user request to reflect the latest stage of our project. This is imperative as this will be used for the future